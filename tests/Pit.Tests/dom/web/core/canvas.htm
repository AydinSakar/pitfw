<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Canvas Test</title>
    <style type="text/css">
        html, body
        {
            height: 100%;
            overflow: auto;
        }
        body
        {
            padding: 0;
            margin: 0;
        }
        #silverlightControlHost
        {
            height: 0%;
            text-align: center;
        }
    </style>
    <script src="../pit.js" type="text/javascript"></script>
    <script src="../assert.js" type="text/javascript"></script>
    <script src="../Silverlight.js" type="text/javascript"></script>
    <script type="text/javascript">
        function onSilverlightError(sender, args) {
            var appSource = "";
            if (sender != null && sender != 0) {
                appSource = sender.getHost().Source;
            }

            var errorType = args.ErrorType;
            var iErrorCode = args.ErrorCode;

            if (errorType == "ImageError" || errorType == "MediaError") {
                return;
            }

            var errMsg = "Unhandled Error in Silverlight Application " + appSource + "\n";

            errMsg += "Code: " + iErrorCode + "    \n";
            errMsg += "Category: " + errorType + "       \n";
            errMsg += "Message: " + args.ErrorMessage + "     \n";

            if (errorType == "ParserError") {
                errMsg += "File: " + args.xamlFile + "     \n";
                errMsg += "Line: " + args.lineNumber + "     \n";
                errMsg += "Position: " + args.charPosition + "     \n";
            }
            else if (errorType == "RuntimeError") {
                if (args.lineNumber != 0) {
                    errMsg += "Line: " + args.lineNumber + "     \n";
                    errMsg += "Position: " + args.charPosition + "     \n";
                }
                errMsg += "MethodName: " + args.methodName + "     \n";
            }

            throw new Error(errMsg);
        }

        function loadImageData() {
            var canvas = document.getElementById("canvas")
            var context = canvas.getContext("2d")
            var imgd = context.createImageData(50, 50);
            var pix = imgd.data;

            // Loop over each pixel and set a transparent red.
            for (var i = 0; n = pix.length, i < n; i += 4) {
                pix[i] = 255; // red channel
                pix[i + 3] = 127; // alpha channel
            }

            // Draw the ImageData object at the given (x,y) coordinates.
            context.putImageData(imgd, 0, 0);
        }
    </script>
</head>
<body>
    <form id="form1" runat="server" style="height:100%">
    <input type="button" name="test" value="Start DOM Asserts" id="testCanvas" />
    <input type="button" name="test" value="Draw Line" id="line"/>
    <input type="button" name="test" value="Draw Line Caps" id="linecaps"/>
    <input type="button" name="test" value="Draw Arc" id="arc"/>
    <input type="button" name="test" value="Draw Quad Arc" id="quadarc"/>
    <input type="button" name="test" value="Draw Bezier Curve" id="bezier"/>
    <input type="button" name="test" value="Draw Line Joins" id="linejoins"/>
    <input type="button" name="test" value="Draw Rectangles" id="rectangle"/>
    <input type="button" name="test" value="Draw LinearGradient" id="lg"/>
    <input type="button" name="test" value="Draw RadialGradient" id="rg"/>
    <input type="button" name="test" value="Draw Clip" id="clip"/>
    <input type="button" name="test" value="Draw Global Alpha" id="globalA"/>
    <input type="button" name="test" value="Draw Global SourceATop" id="globalSourceATop"/>
    <input type="button" name="test" value="Draw Global SourceIn" id="globalSourceIn"/>
    <input type="button" name="test" value="Draw Global SourceOut" id="globalSourceOut"/>
    <input type="button" name="test" value="Draw Global SourceOver" id="globalSourceOver"/>
    <input type="button" name="test" value="Draw Global DestATop" id="globalDestATop"/>
    <input type="button" name="test" value="Draw Global DestIn" id="globalDestIn"/>
    <input type="button" name="test" value="Draw Global DestOut" id="globalDestOut"/>
    <input type="button" name="test" value="Draw Global DestOver" id="globalDestOver"/>
    <input type="button" name="test" value="Draw Global Lighter" id="globalDestLighter"/>
    <input type="button" name="test" value="Draw Global XOR" id="globalDestXor"/>
    <input type="button" name="test" value="Draw Global Copy" id="globalDestCopy"/>
    <input type="button" name="test" value="Translate" id="translate" />
    <input type="button" name="test" value="Scale" id="scale"/>
    <input type="button" name="test" value="Rotate" id="rotate"/>
    <input type="button" name="test" value="Transform" id="transform"/>
    <input type="button" name="test" value="Fill Text" id="filltext"/>
    <input type="button" name="test" value="Stroke Text" id="stroketext"/>
    <input type="button" name="test" value="Load Image" id="loadimage"/>
    <input type="button" name="test" value="Load Pattern" id="loadpattern"/>
    <input type="button" name="test" value="Load ImageData" id="imagedata"/>
    <input type="button" name="test" value="Load ImageData2" onclick="loadImageData()" />

    <div>
        <canvas id="canvas">
        </canvas>
    </div>

    <div id="silverlightControlHost">
        <object data="data:application/x-silverlight-2," type="application/x-silverlight-2" width="0%" height="0%">
		  <param name="source" value="../ClientBin/Pit.Tests.Dom.dbg.xap"/>
          <param name="initParams" value="test=canvas" />
		  <param name="onError" value="onSilverlightError" />
		  <param name="background" value="white" />
		  <param name="minRuntimeVersion" value="4.0.50826.0" />
		  <param name="autoUpgrade" value="true" />
		  <a href="http://go.microsoft.com/fwlink/?LinkID=149156&v=4.0.50826.0" style="text-decoration:none">
 			  <img src="http://go.microsoft.com/fwlink/?LinkId=161376" alt="Get Microsoft Silverlight" style="border-style:none"/>
		  </a>
	    </object><iframe id="_sl_historyFrame" style="visibility:hidden;height:0px;width:0px;border:0px"></iframe></div>
    </form>
</body>
</html>
