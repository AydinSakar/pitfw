<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>QUnit Test</title>
    <script src="js/jquery-1.5.1.js" type="text/javascript"></script>
    <script src="js/qunit-git.js" type="text/javascript"></script>
    <link href="js/qunit-git.css" rel="stylesheet" type="text/css" />
    <script src="pit.js" type="text/javascript"></script>
    <script src="js/pit.core.js" type="text/javascript"></script>
    <script type="text/javascript">
        registerNamespace("Pit.Test.jQueryTest");
        Pit.Test.jQueryTest.addDiv = (function () {
            return Pit.FSharp.Core.Operators.op_PipeRight($("<div id='divEl'><p>Hello World</p></div>").appendTo("#content"))((function (t) {
                return t;
            }));
        });
        Pit.Test.jQueryTest.coreFunctions = function () {
            module("Core Functions");
            test("ofVal", function () {
                Pit.Test.jQueryTest.addDiv();
                var divEl = document.getElementById("divEl");
                var notNull = divEl != null;
                return equal(notNull, true, "Div is not equal to null");
            });
            test("ofEl", function () {
                Pit.Test.jQueryTest.addDiv();
                var divEl = document.getElementById("divEl");
                Pit.FSharp.Core.Operators.op_PipeRight($(divEl).css("background", "red"))((function (t) {
                    return t;
                }));
                var background = divEl.style.background;
                return equal(background, "red", "Div Background");
            });
            return test("id", function () {
                Pit.Test.jQueryTest.addDiv();
                Pit.FSharp.Core.Operators.op_PipeRight($("#divEl").css("border", "3px solid red"))((function (t) {
                    return t;
                }));
                var divEl = document.getElementById("divEl");
                var border = divEl.style.border;
                return equal(border, "3px solid red", "Div Border");
            });
        };
        Pit.Test.jQueryTest.tupleFunctions = function () {
            module("Tuple Functions");
            test("attr", function () {
                Pit.Test.jQueryTest.addDiv();
                var id = Pit.FSharp.Core.Operators.op_PipeRight($("#divEl"))((function (t) {
                    return t.attr("id");
                }));
                return equal(id, "divEl", "jQuery Attr");
            });
            return test("attr2", function () {
                Pit.Test.jQueryTest.addDiv();
                Pit.FSharp.Core.Operators.op_PipeRight($("#divEl").attr("disabled", "disabled"))((function (t) {
                    return t;
                }));
                var disabled = Pit.FSharp.Core.Operators.op_PipeRight($("#divEl"))((function (t) {
                    return t.attr("disabled");
                }));
                return equal(disabled, true, "jQuery Attr with Key/Value");
            });
        };
        Pit.Test.jQueryTest.ajaxFunctions = function () {
            module("AJAX");
            return test("ajax", function () {
                stop();
                return Pit.FSharp.Core.Operators.op_PipeRight(jQuery.ajax({
                    url: "test.htm",
                    cache: false,
                    success: function (result) {
                        notEqual(result, "", "jQuery AJAX response");
                        start();
                    }
                }))((function (value) {
                    return Pit.FSharp.Core.Operators.Ignore(value);
                }));
            });
        };
        DOM.domReady(function () {
            Pit.Test.jQueryTest.coreFunctions();
            Pit.Test.jQueryTest.tupleFunctions();
            return Pit.Test.jQueryTest.ajaxFunctions();
        });
        QUnit.testStart = function (options) {
            var el = document.getElementById("content");
            return el.innerHTML = '';
        };
    </script>
</head>
<body>
    <h1 id="qunit-header">
        QUnit example</h1>
    <h2 id="qunit-banner">
    </h2>
    <div id="qunit-testrunner-toolbar">
    </div>
    <h2 id="qunit-userAgent">
    </h2>
    <ol id="qunit-tests">
    </ol>
    <div id="qunit-fixture">
        test markup, will be hidden</div>
    <div id="content">
    </div>
</body>
</html>
